(define (problem hamiltonian-example)
  (:domain hamiltonian-cycle)
  
  (:objects
    v1 v2 v3 v4 v5 v6 v7 v8 v9 v10 v11 v12 - vertex
    n0 n1 n2 n3 n4 n5 n6 n7 n8 n9 n10 n11 n12 - count
  )
  
  (:init
    ; Define the graph structure (edges)
        (connected v1 v6)
    (connected v6 v1)
    (connected v1 v9)
    (connected v9 v1)
    (connected v1 v11)
    (connected v11 v1)
    (connected v2 v3)
    (connected v3 v2)
    (connected v2 v4)
    (connected v4 v2)
    (connected v2 v5)
    (connected v5 v2)
    (connected v2 v8)
    (connected v8 v2)
    (connected v2 v11)
    (connected v11 v2)
    (connected v3 v4)
    (connected v4 v3)
    (connected v3 v5)
    (connected v5 v3)
    (connected v3 v7)
    (connected v7 v3)
    (connected v3 v10)
    (connected v10 v3)
    (connected v3 v11)
    (connected v11 v3)
    (connected v4 v7)
    (connected v7 v4)
    (connected v4 v8)
    (connected v8 v4)
    (connected v4 v10)
    (connected v10 v4)
    (connected v5 v7)
    (connected v7 v5)
    (connected v5 v10)
    (connected v10 v5)
    (connected v6 v7)
    (connected v7 v6)
    (connected v6 v10)
    (connected v10 v6)
    (connected v6 v11)
    (connected v11 v6)
    (connected v6 v12)
    (connected v12 v6)
    (connected v7 v10)
    (connected v10 v7)
    (connected v7 v11)
    (connected v11 v7)
    (connected v8 v9)
    (connected v9 v8)
    (connected v8 v12)
    (connected v12 v8)
    (connected v9 v10)
    (connected v10 v9)
    (connected v9 v11)
    (connected v11 v9)
    (connected v10 v11)
    (connected v11 v10)
    (connected v10 v12)
    (connected v12 v10)
    (connected v11 v12)
    (connected v12 v11)
    
    ; Define the count sequence for tracking path length
        (next n0 n1)
    (next n1 n2)
    (next n2 n3)
    (next n3 n4)
    (next n4 n5)
    (next n5 n6)
    (next n6 n7)
    (next n7 n8)
    (next n8 n9)
    (next n9 n10)
    (next n10 n11)
    (next n11 n12)
    
    ; Initial path length is zero
    (path-length n0)
    
    ; Total number of vertices
    (total-vertices n12)
  )
  
  (:goal
    (and
      ; We've returned to the start vertex
      (exists (?v - vertex) 
        (and (start ?v) (current ?v)))
      
      ; All vertices have been visited
      (visited v1)
      (visited v2)
      (visited v3)
      (visited v4)
      (visited v5)
      (visited v6)
      (visited v7)
      (visited v8)
      (visited v9)
      (visited v10)
      (visited v11)
      (visited v12)
      
      ; Path length equals total vertices
      (path-length n12)
    )
  )
)